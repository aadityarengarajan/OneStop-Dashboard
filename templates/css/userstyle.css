    @import 'https://fonts.googleapis.com/css?family=Lato:300,400';

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body, html {
    font-family: 'Lato', sans-serif;
    font-size: 20px;
    height: 100%;
    position: relative;
}

.clearfix:after {
    content: "";
    display: block;
    clear: both;
}

a {
    color: #fff;
    text-decoration: none; 
}

.nav-btn {
    width: 100%;
    height: 35px;
    padding-top: 4px;
    color: #D5D3D3;
    background-color: #212121;           ;
    text-align: center;
    cursor: pointer;
    display: none;
}
.nav-btn:active {
    background-color: #090909; 
}

header {
    height: 50px;
    width: 100%;
    background-color: #274C6B;
    display: none;
}

header .logo {
    opacity: 0.9;
    font-size: 120%;
    padding-top: 9px;
    padding-left: 8px;
    color: #fff;
}
header .logo span {
    font-weight: 300;
}

.container {
    width: 100%;
    height: 100%;
    position: relative;
}

.sidebar {
    width: 250px;
    background-color: #302F2F;
    position: fixed;
    top: 0px;
    left: 0;
    bottom: 0;
    box-shadow: 1px 0px 10px #777;
}

.sidebar nav > a {
    font-size: 150%;
    display: inline-block;
    padding: 30px 0px;
    padding-left: 30px;
    opacity: 0.7;
    transition: all 0.2s;
}
.sidebar nav > a:hover {
    opacity: 1;
}

.sidebar nav a span {
    font-weight: 300;
}

.sidebar nav ul {
    list-style: none;
}

.sidebar nav ul li {
    font-size: 70%;
    padding: 19px 0;    
    padding-left: 20px;
    border-bottom: 0.5px solid #111;
}

.sidebar nav ul li:nth-child(1):hover {
    background-color: #e67e22;
}

.sidebar nav ul li:nth-child(1).active {
    background-color: #e67e22;
}

.sidebar nav ul ul li:nth-child(1):hover {
    background-color: #302F2F;
}

.sidebar nav ul ul li:nth-child(1).active {
    background-color: #302F2F;
}

.sidebar nav ul ul li div ul li:nth-child(1):hover {
    background-color: #4682B4;
}

.sidebar nav ul ul li div ul li:nth-child(1).active {
    background-color: #4682B4;
}
.sidebar nav ul ul li div ul li:nth-child(2):hover {
    background-color: #4682B4;
}

.sidebar nav ul ul li div ul li:nth-child(2).active {
    background-color: #4682B4;
}
.sidebar nav ul ul li div ul li:nth-child(3):hover {
    background-color: #4682B4;
}

.sidebar nav ul ul li div ul li:nth-child(3).active {
    background-color: #4682B4;
}
.sidebar nav ul ul li div ul li:nth-child(4):hover {
    background-color: #4682B4;
}

.sidebar nav ul ul li div ul li:nth-child(4).active {
    background-color: #4682B4;
}
.sidebar nav ul ul li div ul li:nth-child(5):hover {
    background-color: #4682B4;
}

.sidebar nav ul ul li div ul li:nth-child(5).active {
    background-color: #4682B4;
}

.sidebar nav ul li:nth-child(3):hover {
    background-color: #16a085;
}

.sidebar nav ul li:nth-child(3).active {
    background-color: #16a085;
}

.sidebar nav ul li:nth-child(4):hover {
    background-color: #8e44ad;
}

.sidebar nav ul li:nth-child(4).active {
    background-color: #8e44ad;
}

.sidebar nav ul li:nth-child(5):hover {
    background-color: #f1c40f;
}

.sidebar nav ul li:nth-child(5).active {
    background-color: #f1c40f;
}


.sidebar nav ul li a {
    color: #D7D5D5;
}

.sidebar nav ul ul li div ul li div{
    color: #D7D5D5;
}
.sidebar nav ul li div ul li:hover div{
    color: #fff;
}

.sidebar nav ul li:hover a{
    color: #fff;
}

.main-content {
    background-color: #fafafa;
    width: calc(100% - 250px);
    height: 100%;
    margin-left: 250px;
    padding: 20px 30px;
}
.main-content .panel-wrapper {
    margin: 20px 0;
    box-shadow: 0px 1px 5px #777;
}

.main-content .panel-wrapper .panel-head {
    background-color: #00A5F2;
    color: #fff;
    padding: 10px 10px;
    border: 1px solid #00A5F2;
}
.main-content .panel-wrapper .panel-body {
    padding: 20px 10px;
    font-size: 80%;
}

@media only screen and (max-width: 420px){
    header {
        display: block;
    }
    .nav-btn {
        display: block;
    }
    .sidebar {
        position: relative;
        height: 378px;
        width: 100%;
        display: none;
        margin-bottom: 40px;
        z-index: 1000;
    }
    .main-content {
        width: 100%;
        margin-left: 0;
        z-index: -1;
        position: relative;
    }
}

@media only screen and (max-width: 768px){
    header {
        display: block;
    }
    .nav-btn {
        display: block;
    }
    .sidebar {
        position: relative;
        height: 378px;
        width: 100%;
        display: none;
        margin-bottom: 40px;
        z-index: 1000;
    }
    .main-content {
        width: 100%;
        margin-left: 0;
        z-index: -1;
        position: relative;
    }
}

.dropdown {
  position: absolute;
  top:50%;
  transform: translateY(-50%);
}

a {
  color: #fff;
}

.dropdown dd,
.dropdown dt {
  margin: 0px;
  padding: 0px;
}

.dropdown ul {
  margin: -1px 0 0 0;
}

.dropdown dd {
  position: relative;
}

.dropdown a,
.dropdown a:visited {
  color: #fff;
  text-decoration: none;
  outline: none;
  font-size: 12px;
}

.dropdown dt a {
  background-color: #4F6877;
  display: block;
  padding: 8px 20px 5px 10px;
  min-height: 25px;
  line-height: 24px;
  overflow: hidden;
  border: 0;
  width: 272px;
}

.dropdown dt a span,
.multiSel span {
  cursor: pointer;
  display: inline-block;
  padding: 0 3px 2px 0;
}

.dropdown dd ul {
  background-color: #4F6877;
  border: 0;
  color: #fff;
  display: none;
  left: 0px;
  padding: 2px 15px 2px 5px;
  position: absolute;
  top: 2px;
  width: 280px;
  list-style: none;
  height: 100px;
  overflow: auto;
}

.dropdown span.value {
  display: none;
}

.dropdown dd ul li a {
  padding: 5px;
  display: block;
}

.dropdown dd ul li a:hover {
  background-color: #fff;
}

button {
  background-color: #6BBE92;
  width: 302px;
  border: 0;
  padding: 10px 0;
  margin: 5px 0;
  text-align: center;
  color: #fff;
  font-weight: bold;
}

.c-circle-nav {
  position: fixed;
  bottom: 12px;
  right: 12px;
  z-index: 1000;
  width: 48px;
  height: 48px;
  border-radius: 24px;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav {
    width: 96px;
    height: 96px;
    border-radius: 48px;
  }
}

.c-circle-nav__items {
  display: block;
  list-style: none;
  position: absolute;
  z-index: 90;
  margin: 0;
  padding: 0;
}

.c-circle-nav__item {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 48px;
  height: 48px;
  border-radius: 24px;
  opacity: 0;
  -webkit-transition-property: -webkit-transform, opacity;
  transition-property: transform, opacity;
  -webkit-transition-duration: 0.3s, 0.3s;
  transition-duration: 0.3s, 0.3s;
  -webkit-transition-timing-function: cubic-bezier(0.35, -0.59, 0.47, 0.97);
  transition-timing-function: cubic-bezier(0.35, -0.59, 0.47, 0.97);
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__item {
    width: 96px;
    height: 96px;
    border-radius: 48px;
  }
}
/**
* Transisition delays at the default state.
*/

.c-circle-nav__item:nth-child(1) {
  -webkit-transition-delay: 0.4s;
  transition-delay: 0.4s;
}

.c-circle-nav__item:nth-child(2) {
  -webkit-transition-delay: 0.3s;
  transition-delay: 0.3s;
}

.c-circle-nav__item:nth-child(3) {
  -webkit-transition-delay: 0.2s;
  transition-delay: 0.2s;
}

/**
* We're using the .is-active class, which is added to the nav via JavaScript.
* Once the nav is active, the items inherit the properties below. We will
* manually write out the transform properties for first and last items, as we
* already know their position. For all items in between though, we'll use some
* polar-to-cartesian math and some Sass functions to get the positioning.
*/

.c-circle-nav.is-active .c-circle-nav__item {
  -webkit-transition-timing-function: cubic-bezier(0.35, 0.03, 0.47, 1.59);
  transition-timing-function: cubic-bezier(0.35, 0.03, 0.47, 1.59);
}

.c-circle-nav.is-active .c-circle-nav__item:nth-child(1) {
  -webkit-transition-delay: 0s;
  transition-delay: 0s;
  -webkit-transform: translate(-144px, 0);
  -ms-transform: translate(-144px, 0);
  transform: translate(-144px, 0);
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav.is-active .c-circle-nav__item: nth-child(1) {
    -webkit-transform: translate(-288px, 0);
    -ms-transform: translate(-288px, 0);
    transform: translate(-288px, 0);
  }
}


.c-circle-nav.is-active .c-circle-nav__item:nth-child(2) {
  -webkit-transition-delay: 0.2s;
  transition-delay: 0.2s;
  -webkit-transform: translate(-102px, -102px);
  -ms-transform: translate(-102px, -102px);
  transform: translate(-102px, -102px);
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav.is-active .c-circle-nav__item: nth-child(2) {
    -webkit-transform: translate(-204px, -204px);
    -ms-transform: translate(-204px, -204px);
    transform: translate(-204px, -204px);
  }
}


.c-circle-nav.is-active .c-circle-nav__item:nth-child(3) {
  -webkit-transition-delay: 0.4s;
  transition-delay: 0.4s;
  -webkit-transform: translate(0, -144px);
  -ms-transform: translate(0, -144px);
  transform: translate(0, -144px);
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav.is-active .c-circle-nav__item: nth-child(3) {
    -webkit-transform: translate(0, -288px);
    -ms-transform: translate(0, -288px);
    transform: translate(0, -288px);
  }
}
/**
* Apart from the transform properties, we'll also make sure the items get
* the correct opacity.
*/

.c-circle-nav.is-active .c-circle-nav__item {
  opacity: 1;
}
/**
* Let's style the links now. This is just boilerplate stuff, and of course,
* you'll probably want to change up the icons to match your needs. In any case,
* we'll do it here for the sake of completion.
*/

.c-circle-nav__link {
  display: block;
  width: 100%;
  height: 100%;
  border-radius: 24px;
  box-shadow: inset 0 0 0 2px #fff;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__link {
    border-radius: 48px;
  }
}

.c-circle-nav__link img {
  display: block;
  max-width: 100%;
  height: auto;
}

.c-circle-nav__link:hover {
  box-shadow: inset 0 0 0 2px #ff283c;
}
/* -----------------------------------------------------------------------------
THE TOGGLE COMPONENT
----------------------------------------------------------------------------- */
/**
* The toggle is a button element, and as such requires some resets that are
* unique to buttons. This button also inherits some funky stuff from my
* CSS animating hamburger menu icons demo, which can be found at this url:
* https://github.com/callmenick/Animating-Hamburger-Icons
*/

.c-circle-nav__toggle {
  display: block;
  position: absolute;
  z-index: 100;
  margin: 0;
  padding: 0;
  width: 48px;
  height: 48px;
  background-color: #ff283c;
  font: inherit;
  font-size: 0;
  text-indent: -9999px;
  border-radius: 24px;
  -webkit-transition: background 0.3s;
  transition: background 0.3s;
  /* reset some browser defaults */
  
  cursor: pointer;
  border: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: none;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__toggle {
    width: 96px;
    height: 96px;
    border-radius: 48px;
  }
}

.c-circle-nav__toggle:hover,
.c-circle-nav__toggle:focus,
.c-circle-nav__toggle.is-active {
  outline: none;
  background-color: #c10012;
}

.c-circle-nav__toggle span,
.c-circle-nav__toggle span::before,
.c-circle-nav__toggle span::after {
  display: block;
  position: absolute;
  height: 4px;
  background: #fff;
  border-radius: 1px;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__toggle span, .c-circle-nav__toggle span::before, .c-circle-nav__toggle span::after {
    height: 8px;
    border-radius: 2px;
  }
}

.c-circle-nav__toggle span {
  top: 22px;
  left: 10px;
  right: 10px;
  -webkit-transition: background 0.3s;
  transition: background 0.3s;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__toggle span {
    top: 44px;
    left: 20px;
    right: 20px;
  }
}

.c-circle-nav__toggle span::before,
.c-circle-nav__toggle span::after {
  left: 0;
  width: 100%;
  content: "";
  -webkit-transition-duration: 0.3s, 0.3s;
  transition-duration: 0.3s, 0.3s;
  -webkit-transition-delay: 0.3s, 0s;
  transition-delay: 0.3s, 0s;
}

.c-circle-nav__toggle span::before {
  top: -8px;
  -webkit-transition-property: top, -webkit-transform;
  transition-property: top, transform;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__toggle span::before {
    top: -16px;
  }
}

.c-circle-nav__toggle span::after {
  bottom: -8px;
  -webkit-transition-property: bottom, -webkit-transform;
  transition-property: bottom, transform;
}

@media (min-width: 480px) and (min-height: 480px) {
  .c-circle-nav__toggle span::after {
    bottom: -16px;
  }
}
/* button active state */

.c-circle-nav__toggle.is-active span {
  background: none;
}

.c-circle-nav__toggle.is-active span::before {
  top: 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  -webkit-transition-delay: 0s, 0.3s;
  transition-delay: 0s, 0.3s;
}

.c-circle-nav__toggle.is-active span::after {
  bottom: 0;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  -webkit-transition-delay: 0s, 0.3s;
  transition-delay: 0s, 0.3s;
}
/* -----------------------------------------------------------------------------
THE MASK COMPONENT
----------------------------------------------------------------------------- */
/**
* Here's the mask component, which actually gets created and inserted to the
* DOM via JavaScript. It simply acts as an overlay to draw attention to the
* navigation when it is active. It also uses the .is-acvite state class.
*/

.c-mask {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 900;
  visibility: hidden;
  opacity: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-transition: opacity 0.3s, visibility 0.3s;
  transition: opacity 0.3s, visibility 0.3s;
}

.c-mask.is-active {
  opacity: 1;
  visibility: visible;
}
